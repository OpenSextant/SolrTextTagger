<?xml version="1.0" encoding="UTF-8" ?>
<!--
  This software was produced for the U. S. Government
  under Contract No. W15P7T-11-C-F600, and is
  subject to the Rights in Noncommercial Computer Software
  and Noncommercial Computer Software Documentation
  Clause 252.227-7014 (JUN 1995)

  Copyright 2013 The MITRE Corporation. All Rights Reserved.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<schema name="minimal" version="1.5">

 <fields>
   <field name="id" type="string" required="true" />
   <field name="name" type="string" />
   <!-- freq, positions, and norms are not needed by the tagger. However if you
   intend to have this field be used for general search, you should not exclude
   these stats. -->
   <field name="name_tagIdx" type="tag" stored="false"
          omitTermFreqAndPositions="true" omitNorms="true" />
   <!-- used for PositionIncrementAttribute and PositionLengthAttribute support
   tests -->
   <field name="name_tagIdx2" type="tag2" stored="false"
          omitTermFreqAndPositions="true" omitNorms="true" />
   
   <copyField source="name" dest="name_tagIdx" />
   <copyField source="name" dest="name_tagIdx2" />
   
   <dynamicField name="*" type="string" indexed="true" stored="true" />
 </fields>
 
  <uniqueKey>id</uniqueKey>
 
 <types>
  <fieldType name="string" class="solr.StrField"/>
  
  <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
  <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>

  <fieldType name="tag" class="solr.TextField" positionIncrementGap="100" >
    <analyzer>
      <tokenizer class="solr.StandardTokenizerFactory"
                 maxTokenLength="32"/><!-- 32 just for tests, bumps posInc -->
      <!-- TODO consider WordDelimiterFilter -->
      <filter class="solr.ASCIIFoldingFilterFactory"/>
      <filter class="solr.LowerCaseFilterFactory" />
    </analyzer>
  </fieldType>

  <!-- tag2 is used by the PosIncPosLenTaggerTest -->
  <fieldType name="tag2" class="solr.TextField" positionIncrementGap="100" >
    <analyzer type="index">
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      <!-- enable catenateWords (wi-fi to wifi, wi fi) and preserveOriginal -->
      <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" 
                 generateNumberParts="1" catenateWords="1" catenateNumbers="1"
                 catenateAll="1" preserveOriginal="1" stemEnglishPossessive="1"/>
      <!-- enable expand to have multiple alternative tokens-->
      <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" 
                 ignoreCase="false" expand="true"/>
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
      <filter class="solr.ASCIIFoldingFilterFactory"/>
      <filter class="solr.LowerCaseFilterFactory" />
    </analyzer>
    <analyzer type="query">
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      <!-- enable catenateWords (wi-fi to wifi, wi fi) and preserveOriginal -->
      <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" 
                 generateNumberParts="1" catenateWords="0" catenateNumbers="0"
                 catenateAll="0" preserveOriginal="0" stemEnglishPossessive="1"/>
      <!-- enable expand to have multiple alternative tokens-->
      <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" 
                 ignoreCase="false" expand="true"/>
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
      <filter class="solr.ASCIIFoldingFilterFactory"/>
      <filter class="solr.LowerCaseFilterFactory" />
    </analyzer>
  </fieldType>

  <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
    <analyzer type="index">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <!-- <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" /> -->
      <!-- in this example, we will only use synonyms at query time
      <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
      -->
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
    <analyzer type="query">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <!-- <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" /> -->
      <!-- <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/> -->
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
  </fieldType>
  
 </types>
 
 
</schema>
